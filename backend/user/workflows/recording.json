{
  "nodes": [
    {
      "id": "RobotConnectNode-1753288651158",
      "type": "customNode",
      "position": {
        "x": -0.20436284717544595,
        "y": 188.2938276097981
      },
      "data": {
        "label": "Robot Connect",
        "nodeInfo": {
          "name": "RobotConnectNode",
          "display_name": "Robot Connect",
          "description": "Connect to a robot using LeRobot framework",
          "detailed_description": "",
          "tags": [
            "LeRobot",
            "Robot",
            "Connection"
          ],
          "input_types": {
            "required": {
              "robot_type": [
                [
                  "so100_follower",
                  "so101_follower",
                  "koch_follower",
                  "hope_jr",
                  "lekiwi",
                  "viperx",
                  "stretch3"
                ],
                {
                  "default": "so100_follower"
                }
              ],
              "port": [
                "STRING",
                {
                  "default": "/dev/ttyUSB0"
                }
              ],
              "robot_id": [
                "STRING",
                {
                  "default": "robot_1"
                }
              ]
            },
            "optional": {
              "cameras_config": [
                "STRING",
                {
                  "default": "{}"
                }
              ]
            }
          },
          "return_types": {
            "required": {
              "robot": [
                "ANY",
                {}
              ],
              "robot_config": [
                "ANY",
                {}
              ],
              "status": [
                "STRING",
                {}
              ]
            }
          },
          "function": "connect_robot"
        },
        "type": "RobotConnectNode",
        "inputValues": {
          "port": "/dev/tty.usbmodem5A7A0558831",
          "robot_id": "123455"
        }
      },
      "measured": {
        "width": 719,
        "height": 375
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DatasetCreateNode-1753288843056",
      "type": "customNode",
      "position": {
        "x": 853.5578005204633,
        "y": 206.72339530687833
      },
      "data": {
        "label": "Dataset Create",
        "nodeInfo": {
          "name": "DatasetCreateNode",
          "display_name": "Dataset Create",
          "description": "Create or load a LeRobot dataset for recording",
          "detailed_description": "",
          "tags": [
            "LeRobot",
            "Dataset",
            "Creation"
          ],
          "input_types": {
            "required": {
              "robot": [
                "ANY",
                {}
              ],
              "repo_id": [
                "STRING",
                {
                  "default": "user/dataset_name"
                }
              ],
              "task_description": [
                "STRING",
                {
                  "default": "Pick and place task"
                }
              ],
              "fps": [
                "INT",
                {
                  "default": 30,
                  "min": 1,
                  "max": 60
                }
              ]
            },
            "optional": {
              "root_path": [
                "STRING",
                {
                  "default": ""
                }
              ],
              "use_video": [
                "BOOLEAN",
                {
                  "default": true
                }
              ],
              "resume": [
                "BOOLEAN",
                {
                  "default": false
                }
              ]
            }
          },
          "return_types": {
            "required": {
              "dataset": [
                "ANY",
                {}
              ],
              "dataset_features": [
                "ANY",
                {}
              ],
              "status": [
                "STRING",
                {}
              ]
            }
          },
          "function": "create_dataset"
        },
        "type": "DatasetCreateNode",
        "inputValues": {
          "repo_id": "niel1511/abcd",
          "task_description": "abc"
        }
      },
      "measured": {
        "width": 363,
        "height": 407
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "RecordEpisodeNode-1753289375385",
      "type": "customNode",
      "position": {
        "x": -76.92780463307867,
        "y": 765.4857969164459
      },
      "data": {
        "label": "Record Episode",
        "nodeInfo": {
          "name": "RecordEpisodeNode",
          "display_name": "Record Episode",
          "description": "Record a single episode of robot data",
          "detailed_description": "",
          "tags": [
            "LeRobot",
            "Recording",
            "Episode"
          ],
          "input_types": {
            "required": {
              "robot": [
                "ANY",
                {}
              ],
              "dataset": [
                "ANY",
                {}
              ],
              "dataset_features": [
                "ANY",
                {}
              ],
              "episode_time_s": [
                "FLOAT",
                {
                  "default": 30,
                  "min": 1,
                  "max": 300
                }
              ],
              "fps": [
                "INT",
                {
                  "default": 30,
                  "min": 1,
                  "max": 60
                }
              ],
              "task_description": [
                "STRING",
                {
                  "default": "Pick and place task"
                }
              ]
            },
            "optional": {
              "teleoperator": [
                "ANY",
                {}
              ],
              "policy": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {
            "required": {
              "dataset": [
                "ANY",
                {}
              ],
              "episode_data": [
                "ANY",
                {}
              ],
              "status": [
                "STRING",
                {}
              ]
            }
          },
          "function": "record_episode"
        },
        "type": "RecordEpisodeNode"
      },
      "measured": {
        "width": 349,
        "height": 408
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DatasetSaveNode-1753289470484",
      "type": "customNode",
      "position": {
        "x": 546.0659629659023,
        "y": 918.4249162051477
      },
      "data": {
        "label": "Dataset Save",
        "nodeInfo": {
          "name": "DatasetSaveNode",
          "display_name": "Dataset Save",
          "description": "Save recorded episode data to dataset",
          "detailed_description": "",
          "tags": [
            "LeRobot",
            "Dataset",
            "Save"
          ],
          "input_types": {
            "required": {
              "dataset": [
                "ANY",
                {}
              ],
              "episode_data": [
                "ANY",
                {}
              ]
            },
            "optional": {
              "push_to_hub": [
                "BOOLEAN",
                {
                  "default": false
                }
              ],
              "private": [
                "BOOLEAN",
                {
                  "default": false
                }
              ],
              "tags": [
                "STRING",
                {
                  "default": ""
                }
              ]
            }
          },
          "return_types": {
            "required": {
              "dataset": [
                "ANY",
                {}
              ],
              "episode_info": [
                "ANY",
                {}
              ],
              "status": [
                "STRING",
                {}
              ]
            }
          },
          "function": "save_episode"
        },
        "type": "DatasetSaveNode"
      },
      "measured": {
        "width": 356,
        "height": 296
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "InputNode-1753289837971",
      "type": "customNode",
      "position": {
        "x": -82.38753402662445,
        "y": 1420.1298285509351
      },
      "data": {
        "label": "Input",
        "nodeInfo": {
          "name": "InputNode",
          "display_name": "Input",
          "description": "Provides input data to the workflow",
          "detailed_description": "\nInputNode\n\nPurpose: Provides input data to the workflow by allowing users to enter text values manually.\n\nInputs:\n  - value (STRING): The input text value to pass through the workflow (default: empty string)\n\nOutputs:\n  - output (ANY): The same value that was input, passed through to connected nodes\n\nUsage: Use this node to inject text data into your workflow, either by setting a default value or connecting it to other nodes that provide string data.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "STRING",
                {
                  "default": ""
                }
              ]
            }
          },
          "return_types": {
            "required": {
              "output": [
                "ANY",
                {}
              ]
            }
          },
          "function": "execute"
        },
        "type": "InputNode",
        "inputValues": {
          "value": "True"
        }
      },
      "measured": {
        "width": 213,
        "height": 216
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DisplayNode-1753289880406",
      "type": "customNode",
      "position": {
        "x": 1442.4248805645773,
        "y": 387.72286627235707
      },
      "data": {
        "label": "Display",
        "nodeInfo": {
          "name": "DisplayNode",
          "display_name": "Display",
          "description": "Display the input value (ANY type) for debugging or monitoring.",
          "detailed_description": "\nDisplayNode\n\nPurpose: Takes any input value and displays it (prints to console). Useful for debugging or monitoring workflow data.\n\nInputs:\n  - value (ANY): Any value to display\n\nOutputs:\n  - value (ANY): The same value that was input, for display purposes\n\nUsage: Use this node to inspect values in your workflow. It prints the value to the backend console and passes it through for display in the UI.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {},
          "function": "display"
        },
        "type": "DisplayNode"
      },
      "measured": {
        "width": 362,
        "height": 190
      },
      "selected": false
    },
    {
      "id": "DisplayNode-1753289903033",
      "type": "customNode",
      "position": {
        "x": 1409.0945213853433,
        "y": 922.016697988641
      },
      "data": {
        "label": "Display",
        "nodeInfo": {
          "name": "DisplayNode",
          "display_name": "Display",
          "description": "Display the input value (ANY type) for debugging or monitoring.",
          "detailed_description": "\nDisplayNode\n\nPurpose: Takes any input value and displays it (prints to console). Useful for debugging or monitoring workflow data.\n\nInputs:\n  - value (ANY): Any value to display\n\nOutputs:\n  - value (ANY): The same value that was input, for display purposes\n\nUsage: Use this node to inspect values in your workflow. It prints the value to the backend console and passes it through for display in the UI.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {},
          "function": "display"
        },
        "type": "DisplayNode"
      },
      "measured": {
        "width": 362,
        "height": 190
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DisplayNode-1753289909906",
      "type": "customNode",
      "position": {
        "x": 486.764355184682,
        "y": 1338.4494336916737
      },
      "data": {
        "label": "Display",
        "nodeInfo": {
          "name": "DisplayNode",
          "display_name": "Display",
          "description": "Display the input value (ANY type) for debugging or monitoring.",
          "detailed_description": "\nDisplayNode\n\nPurpose: Takes any input value and displays it (prints to console). Useful for debugging or monitoring workflow data.\n\nInputs:\n  - value (ANY): Any value to display\n\nOutputs:\n  - value (ANY): The same value that was input, for display purposes\n\nUsage: Use this node to inspect values in your workflow. It prints the value to the backend console and passes it through for display in the UI.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {},
          "function": "display"
        },
        "type": "DisplayNode"
      },
      "measured": {
        "width": 362,
        "height": 190
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DisplayNode-1753289916185",
      "type": "customNode",
      "position": {
        "x": 481.2305234964082,
        "y": 1657.6038758380391
      },
      "data": {
        "label": "Display",
        "nodeInfo": {
          "name": "DisplayNode",
          "display_name": "Display",
          "description": "Display the input value (ANY type) for debugging or monitoring.",
          "detailed_description": "\nDisplayNode\n\nPurpose: Takes any input value and displays it (prints to console). Useful for debugging or monitoring workflow data.\n\nInputs:\n  - value (ANY): Any value to display\n\nOutputs:\n  - value (ANY): The same value that was input, for display purposes\n\nUsage: Use this node to inspect values in your workflow. It prints the value to the backend console and passes it through for display in the UI.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {},
          "function": "display"
        },
        "type": "DisplayNode"
      },
      "measured": {
        "width": 362,
        "height": 190
      },
      "selected": false,
      "dragging": false
    },
    {
      "id": "DisplayNode-1753289950791",
      "type": "customNode",
      "position": {
        "x": 539.1968869771383,
        "y": 707.5425974579242
      },
      "data": {
        "label": "Display",
        "nodeInfo": {
          "name": "DisplayNode",
          "display_name": "Display",
          "description": "Display the input value (ANY type) for debugging or monitoring.",
          "detailed_description": "\nDisplayNode\n\nPurpose: Takes any input value and displays it (prints to console). Useful for debugging or monitoring workflow data.\n\nInputs:\n  - value (ANY): Any value to display\n\nOutputs:\n  - value (ANY): The same value that was input, for display purposes\n\nUsage: Use this node to inspect values in your workflow. It prints the value to the backend console and passes it through for display in the UI.\n        ",
          "tags": [
            "Basic"
          ],
          "input_types": {
            "required": {
              "value": [
                "ANY",
                {}
              ]
            }
          },
          "return_types": {},
          "function": "display"
        },
        "type": "DisplayNode"
      },
      "measured": {
        "width": 362,
        "height": 190
      },
      "selected": true,
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "RobotConnectNode-1753288651158",
      "sourceHandle": "output-0",
      "target": "DatasetCreateNode-1753288843056",
      "targetHandle": "robot",
      "id": "xy-edge__RobotConnectNode-1753288651158output-0-DatasetCreateNode-1753288843056robot"
    },
    {
      "source": "DatasetCreateNode-1753288843056",
      "sourceHandle": "output-0",
      "target": "RecordEpisodeNode-1753289375385",
      "targetHandle": "dataset",
      "id": "xy-edge__DatasetCreateNode-1753288843056output-0-RecordEpisodeNode-1753289375385dataset"
    },
    {
      "source": "RecordEpisodeNode-1753289375385",
      "sourceHandle": "output-0",
      "target": "DatasetSaveNode-1753289470484",
      "targetHandle": "dataset",
      "id": "xy-edge__RecordEpisodeNode-1753289375385output-0-DatasetSaveNode-1753289470484dataset"
    },
    {
      "source": "RobotConnectNode-1753288651158",
      "sourceHandle": "output-0",
      "target": "RecordEpisodeNode-1753289375385",
      "targetHandle": "robot",
      "id": "xy-edge__RobotConnectNode-1753288651158output-0-RecordEpisodeNode-1753289375385robot"
    },
    {
      "source": "DatasetCreateNode-1753288843056",
      "sourceHandle": "output-1",
      "target": "RecordEpisodeNode-1753289375385",
      "targetHandle": "dataset_features",
      "id": "xy-edge__DatasetCreateNode-1753288843056output-1-RecordEpisodeNode-1753289375385dataset_features"
    },
    {
      "source": "RecordEpisodeNode-1753289375385",
      "sourceHandle": "output-1",
      "target": "DatasetSaveNode-1753289470484",
      "targetHandle": "episode_data",
      "id": "xy-edge__RecordEpisodeNode-1753289375385output-1-DatasetSaveNode-1753289470484episode_data"
    },
    {
      "source": "InputNode-1753289837971",
      "sourceHandle": "output",
      "target": "DatasetSaveNode-1753289470484",
      "targetHandle": "push_to_hub",
      "id": "xy-edge__InputNode-1753289837971output-DatasetSaveNode-1753289470484push_to_hub"
    },
    {
      "source": "DatasetCreateNode-1753288843056",
      "sourceHandle": "output-2",
      "target": "DisplayNode-1753289880406",
      "targetHandle": "value",
      "id": "xy-edge__DatasetCreateNode-1753288843056output-2-DisplayNode-1753289880406value"
    },
    {
      "source": "DatasetSaveNode-1753289470484",
      "sourceHandle": "output-2",
      "target": "DisplayNode-1753289903033",
      "targetHandle": "value",
      "id": "xy-edge__DatasetSaveNode-1753289470484output-2-DisplayNode-1753289903033value"
    },
    {
      "source": "RecordEpisodeNode-1753289375385",
      "sourceHandle": "output-2",
      "target": "DisplayNode-1753289909906",
      "targetHandle": "value",
      "id": "xy-edge__RecordEpisodeNode-1753289375385output-2-DisplayNode-1753289909906value"
    },
    {
      "source": "RecordEpisodeNode-1753289375385",
      "sourceHandle": "output-1",
      "target": "DisplayNode-1753289916185",
      "targetHandle": "value",
      "id": "xy-edge__RecordEpisodeNode-1753289375385output-1-DisplayNode-1753289916185value"
    },
    {
      "source": "RecordEpisodeNode-1753289375385",
      "sourceHandle": "output-0",
      "target": "DisplayNode-1753289950791",
      "targetHandle": "value",
      "id": "xy-edge__RecordEpisodeNode-1753289375385output-0-DisplayNode-1753289950791value"
    }
  ],
  "metadata": {
    "name": "recording",
    "description": "Auto-saved on 7/23/2025",
    "created": "2025-07-23T21:59:02.196Z",
    "version": "1.0.0",
    "modified": "2025-07-23T21:59:02.196Z"
  }
}